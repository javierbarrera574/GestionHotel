@page "/crear/persona/{NumHab:int}"
@inject IHTTPServicio http
@inject NavigationManager navigationManager
@inject IJSRuntime jsruntime
@using HotelApp.Client.Helpers;

<div class="p-4">
    <div class="container col-md-6">
        <div class="shadow p-4 bg-white">
            <FormPersonas pers="persona" onValidSubbmit="Grabar" onCancel="Cancelar" />
        </div>
    </div>
</div>
@code {
    [Parameter]public int NumHab { get; set; }
    private Persona persona = new Persona();

    private async Task Grabar()
    {
        PersonaDTO personaDTO = new()
        {
                Nombres = persona.Nombres,
                Apellidos = persona.Apellidos,
                Correo = persona.Correo,
                Dni = persona.Dni,
                Telefono = persona.Telefono,
                NumTarjeta = persona.NumTarjeta,
                EshuespedYreservante = persona.EsHuespedyReservante

         };
        personaDTO.NumHab = NumHab;

        var HTTPRespueta = await http.Post<PersonaDTO>("api/Persona", personaDTO);
        if (HTTPRespueta.Error)
        {
            string MensajeError = await HTTPRespueta.ObtenerError();
            await jsruntime.Error("Error", MensajeError, TipoMensajeSweetAlert.error);
        }

        // // if (HTTPRespueta.Error)
        // // {
        // //     string MensajeError = await HTTPRespueta.ObtenerError();
        // //     await jsruntime.InvokeAsync<string>("alert", MensajeError);
        // // }
        // string MensajeError = await HTTPRespueta.ObtenerError();

        // if (await jsruntime.Error("Error", MensajeError, TipoMensajeSweetAlert.error))
        // {
        //     //string MensajeError = await HTTPRespueta.ObtenerError();
        //     //await jsruntime.InvokeAsync<string>("alert",MensajeError);
        //     //await jsruntime.Error("Error", MensajeError, TipoMensajeSweetAlert.error);
        // }

        navigationManager.NavigateTo($" / ");
    }


    private void Cancelar()
    {
        navigationManager.NavigateTo($"/");
    }

}